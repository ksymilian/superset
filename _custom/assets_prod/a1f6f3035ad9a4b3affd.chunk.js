"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[7486,2538],{70547:(t,o,i)=>{function e(t,o,i,r,s,a){if(!(s-r<=i)){var u=Math.floor((r+s)/2);n(t,o,u,r,s,a%2),e(t,o,i,r,u-1,a+1),e(t,o,i,u+1,s,a+1)}}function n(t,o,i,e,s,a){for(;s>e;){if(s-e>600){var u=s-e+1,h=i-e+1,p=Math.log(u),d=.5*Math.exp(2*p/3),l=.5*Math.sqrt(p*d*(u-d)/u)*(h-u/2<0?-1:1);n(t,o,i,Math.max(e,Math.floor(i-h*d/u+l)),Math.min(s,Math.floor(i+(u-h)*d/u+l)),a)}var m=o[2*i+a],c=e,f=s;for(r(t,o,e,i),o[2*s+a]>m&&r(t,o,e,s);c<f;){for(r(t,o,c,f),c++,f--;o[2*c+a]<m;)c++;for(;o[2*f+a]>m;)f--}o[2*e+a]===m?r(t,o,e,f):r(t,o,++f,s),f<=i&&(e=f+1),i<=f&&(s=f-1)}}function r(t,o,i,e){s(t,i,e),s(o,2*i,2*e),s(o,2*i+1,2*e+1)}function s(t,o,i){var e=t[o];t[o]=t[i],t[i]=e}function a(t,o,i,e){var n=t-i,r=o-e;return n*n+r*r}function u(t,o,i,e,n){return new h(t,o,i,e,n)}function h(t,o,i,n,r){o=o||p,i=i||d,r=r||Array,this.nodeSize=n||64,this.points=t,this.ids=new r(t.length),this.coords=new r(2*t.length);for(var s=0;s<t.length;s++)this.ids[s]=s,this.coords[2*s]=o(t[s]),this.coords[2*s+1]=i(t[s]);e(this.ids,this.coords,this.nodeSize,0,this.ids.length-1,0)}function p(t){return t[0]}function d(t){return t[1]}function l(t){this.options=x(Object.create(this.options),t),this.trees=new Array(this.options.maxZoom+1)}function m(t,o,i,e,n){return{x:t,y:o,zoom:1/0,id:i,parentId:-1,numPoints:e,properties:n}}function c(t){return{type:"Feature",id:t.id,properties:f(t),geometry:{type:"Point",coordinates:[(e=t.x,360*(e-.5)),(o=t.y,i=(180-360*o)*Math.PI/180,360*Math.atan(Math.exp(i))/Math.PI-90)]}};var o,i,e}function f(t){var o=t.numPoints,i=o>=1e4?Math.round(o/1e3)+"k":o>=1e3?Math.round(o/100)/10+"k":o;return x(x({},t.properties),{cluster:!0,cluster_id:t.id,point_count:o,point_count_abbreviated:i})}function g(t){return t/360+.5}function v(t){var o=Math.sin(t*Math.PI/180),i=.5-.25*Math.log((1+o)/(1-o))/Math.PI;return i<0?0:i>1?1:i}function x(t,o){for(var i in o)t[i]=o[i];return t}function M(t){return t.x}function _(t){return t.y}i.r(o),i.d(o,{default:()=>b}),h.prototype={range:function(t,o,i,e){return function(t,o,i,e,n,r,s){for(var a,u,h=[0,t.length-1,0],p=[];h.length;){var d=h.pop(),l=h.pop(),m=h.pop();if(l-m<=s)for(var c=m;c<=l;c++)a=o[2*c],u=o[2*c+1],a>=i&&a<=n&&u>=e&&u<=r&&p.push(t[c]);else{var f=Math.floor((m+l)/2);a=o[2*f],u=o[2*f+1],a>=i&&a<=n&&u>=e&&u<=r&&p.push(t[f]);var g=(d+1)%2;(0===d?i<=a:e<=u)&&(h.push(m),h.push(f-1),h.push(g)),(0===d?n>=a:r>=u)&&(h.push(f+1),h.push(l),h.push(g))}}return p}(this.ids,this.coords,t,o,i,e,this.nodeSize)},within:function(t,o,i){return function(t,o,i,e,n,r){for(var s=[0,t.length-1,0],u=[],h=n*n;s.length;){var p=s.pop(),d=s.pop(),l=s.pop();if(d-l<=r)for(var m=l;m<=d;m++)a(o[2*m],o[2*m+1],i,e)<=h&&u.push(t[m]);else{var c=Math.floor((l+d)/2),f=o[2*c],g=o[2*c+1];a(f,g,i,e)<=h&&u.push(t[c]);var v=(p+1)%2;(0===p?i-n<=f:e-n<=g)&&(s.push(l),s.push(c-1),s.push(v)),(0===p?i+n>=f:e+n>=g)&&(s.push(c+1),s.push(d),s.push(v))}}return u}(this.ids,this.coords,t,o,i,this.nodeSize)}},l.prototype={options:{minZoom:0,maxZoom:16,radius:40,extent:512,nodeSize:64,log:!1,reduce:null,initial:function(){return{}},map:function(t){return t}},load:function(t){var o=this.options.log;o&&console.time("total time");var i="prepare "+t.length+" points";o&&console.time(i),this.points=t;for(var e,n,r=[],s=0;s<t.length;s++)t[s].geometry&&r.push((e=s,void 0,{x:g((n=t[s].geometry.coordinates)[0]),y:v(n[1]),zoom:1/0,index:e,parentId:-1}));this.trees[this.options.maxZoom+1]=u(r,M,_,this.options.nodeSize,Float32Array),o&&console.timeEnd(i);for(var a=this.options.maxZoom;a>=this.options.minZoom;a--){var h=+Date.now();r=this._cluster(r,a),this.trees[a]=u(r,M,_,this.options.nodeSize,Float32Array),o&&console.log("z%d: %d clusters in %dms",a,r.length,+Date.now()-h)}return o&&console.timeEnd("total time"),this},getClusters:function(t,o){var i=((t[0]+180)%360+360)%360-180,e=Math.max(-90,Math.min(90,t[1])),n=180===t[2]?180:((t[2]+180)%360+360)%360-180,r=Math.max(-90,Math.min(90,t[3]));if(t[2]-t[0]>=360)i=-180,n=180;else if(i>n){var s=this.getClusters([i,e,180,r],o),a=this.getClusters([-180,e,n,r],o);return s.concat(a)}for(var u=this.trees[this._limitZoom(o)],h=u.range(g(i),v(r),g(n),v(e)),p=[],d=0;d<h.length;d++){var l=u.points[h[d]];p.push(l.numPoints?c(l):this.points[l.index])}return p},getChildren:function(t){var o=t>>5,i=t%32,e="No cluster with the specified id.",n=this.trees[i];if(!n)throw new Error(e);var r=n.points[o];if(!r)throw new Error(e);for(var s=this.options.radius/(this.options.extent*Math.pow(2,i-1)),a=n.within(r.x,r.y,s),u=[],h=0;h<a.length;h++){var p=n.points[a[h]];p.parentId===t&&u.push(p.numPoints?c(p):this.points[p.index])}if(0===u.length)throw new Error(e);return u},getLeaves:function(t,o,i){o=o||10,i=i||0;var e=[];return this._appendLeaves(e,t,o,i,0),e},getTile:function(t,o,i){var e=this.trees[this._limitZoom(t)],n=Math.pow(2,t),r=this.options.extent,s=this.options.radius/r,a=(i-s)/n,u=(i+1+s)/n,h={features:[]};return this._addTileFeatures(e.range((o-s)/n,a,(o+1+s)/n,u),e.points,o,i,n,h),0===o&&this._addTileFeatures(e.range(1-s/n,a,1,u),e.points,n,i,n,h),o===n-1&&this._addTileFeatures(e.range(0,a,s/n,u),e.points,-1,i,n,h),h.features.length?h:null},getClusterExpansionZoom:function(t){for(var o=t%32-1;o<this.options.maxZoom;){var i=this.getChildren(t);if(o++,1!==i.length)break;t=i[0].properties.cluster_id}return o},_appendLeaves:function(t,o,i,e,n){for(var r=this.getChildren(o),s=0;s<r.length;s++){var a=r[s].properties;if(a&&a.cluster?n+a.point_count<=e?n+=a.point_count:n=this._appendLeaves(t,a.cluster_id,i,e,n):n<e?n++:t.push(r[s]),t.length===i)break}return n},_addTileFeatures:function(t,o,i,e,n,r){for(var s=0;s<t.length;s++){var a=o[t[s]],u={type:1,geometry:[[Math.round(this.options.extent*(a.x*n-i)),Math.round(this.options.extent*(a.y*n-e))]],tags:a.numPoints?f(a):this.points[a.index].properties},h=a.numPoints?a.id:this.points[a.index].id;void 0!==h&&(u.id=h),r.features.push(u)}},_limitZoom:function(t){return Math.max(this.options.minZoom,Math.min(t,this.options.maxZoom+1))},_cluster:function(t,o){for(var i=[],e=this.options.radius/(this.options.extent*Math.pow(2,o)),n=0;n<t.length;n++){var r=t[n];if(!(r.zoom<=o)){r.zoom=o;var s=this.trees[o+1],a=s.within(r.x,r.y,e),u=r.numPoints||1,h=r.x*u,p=r.y*u,d=null;this.options.reduce&&(d=this.options.initial(),this._accumulate(d,r));for(var l=(n<<5)+(o+1),c=0;c<a.length;c++){var f=s.points[a[c]];if(!(f.zoom<=o)){f.zoom=o;var g=f.numPoints||1;h+=f.x*g,p+=f.y*g,u+=g,f.parentId=l,this.options.reduce&&this._accumulate(d,f)}}1===u?i.push(r):(r.parentId=l,i.push(m(h/u,p/u,l,u,d)))}}return i},_accumulate:function(t,o){var i=o.numPoints?o.properties:this.options.map(this.points[o.index].properties);this.options.reduce(t,i)}};var w=i(11354);const y=()=>{};function b(t){const{width:o,height:i,formData:e,hooks:n,queriesData:r}=t,{onError:s=y,setControlValue:a=y}=n,{bounds:u,geoJSON:h,hasCustomMetric:p,mapboxApiKey:d}=r[0].data,{clusteringRadius:m,globalOpacity:c,mapboxColor:f,mapboxStyle:g,pandasAggfunc:v,pointRadius:x,pointRadiusUnit:M,renderWhileDragging:_}=e,b=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/.exec(f);if(null===b)return s("Color field must be of form 'rgb(%d, %d, %d)'"),{};const z={maxZoom:w.DEFAULT_MAX_ZOOM,radius:m};p&&(z.initial=()=>({sum:0,squaredSum:0,min:1/0,max:-1/0}),z.map=t=>({sum:t.metric,squaredSum:t.metric**2,min:t.metric,max:t.metric}),z.reduce=(t,o)=>{t.sum+=o.sum,t.squaredSum+=o.squaredSum,t.min=Math.min(t.min,o.min),t.max=Math.max(t.max,o.max)});const C=new l(z);return C.load(h.features),{width:o,height:i,aggregatorName:v,bounds:u,clusterer:C,globalOpacity:c,hasCustomMetric:p,mapboxApiKey:d,mapStyle:g,onViewportChange({latitude:t,longitude:o,zoom:i}){a("viewport_longitude",o),a("viewport_latitude",t),a("viewport_zoom",i)},pointRadius:"Auto"===x?w.DEFAULT_POINT_RADIUS:x,pointRadiusUnit:M,renderWhileDragging:_,rgb:b}}}}]);
//# sourceMappingURL=a1f6f3035ad9a4b3affd.chunk.js.map